<idea-plugin>
    <id>com.jdc.tools.pre-commit-review</id>
    <name>JDC Pre-Commit Code Review</name>
    <vendor email="support@jdctools.com" url="https://www.jdctools.com.cn">JDC Tools</vendor>
    <version>1.0.0</version>

    <!-- 版本兼容性 -->
    <idea-version since-build="223"/>

    <description><![CDATA[
    <h2>JDC Pre-Commit Code Review - AI-Powered Code Quality Enhancement</h2>
    <p>A professional IntelliJ IDEA plugin that automatically performs AI-driven code reviews before Git commits, helping developers improve code quality with Claude Sonnet 4 integration.</p>

    <h3>Core Features:</h3>
    <ul>
        <li><strong>Smart Code Review</strong> - Multi-dimensional code quality analysis powered by Claude Sonnet 4</li>
        <li><strong>Quality Scoring</strong> - Provides 0-100 code quality scores with detailed improvement suggestions</li>
        <li><strong>File Selection</strong> - Supports selective review with customizable file selection</li>
        <li><strong>Deep Git Integration</strong> - Automatically detects staged files, content changes, and diff comparison</li>
        <li><strong>Real-time Streaming</strong> - Streaming output of analysis results without waiting</li>
        <li><strong>Secure OAuth Authentication</strong> - Browser-based secure login with automatic re-authentication</li>
        <li><strong>Modern UI</strong> - Beautiful interface compliant with IntelliJ design guidelines</li>
        <li><strong>Multi-language Support</strong> - Supports Java, Kotlin, Python, JavaScript, TypeScript, and more</li>
        <li><strong>Review History</strong> - Complete code review records and history management</li>
        <li><strong>Smart Retry</strong> - Automatic retry on network errors, auto re-login on authentication failure</li>
        <li><strong>Intelligent Filtering</strong> - Automatically filters non-code files, supports 100+ programming languages</li>
    </ul>

    <h3>Quick Start Guide:</h3>
    <ol>
        <li><strong>First Login</strong>: Click the "Login" button in the tool window, browser will automatically open <a href="https://www.jdctools.com.cn/plugin-auth">JDC Tools authorization page</a> for secure authentication</li>
        <li><strong>Modify Code</strong>: Make code changes in your project</li>
        <li><strong>Stage Files</strong>: Use <code>git add</code> to add files to the staging area</li>
        <li><strong>Select Files</strong>: Click "Review Staged Files" and select files to review in the dialog</li>
        <li><strong>Start Review</strong>: Confirm selection to begin AI code review</li>
        <li><strong>View Results</strong>: Real-time view of analysis results and improvement suggestions in the tool window</li>
        <li><strong>Optimize Code</strong>: Improve code based on AI suggestions before committing</li>
    </ol>

    <h3>Keyboard Shortcuts:</h3>
    <ul>
        <li><code>Ctrl+Shift+R</code> - Review staged files</li>
        <li><code>Ctrl+Shift+F</code> - Review current file</li>
        <li><code>Ctrl+Shift+P</code> - Open review tool window</li>
    </ul>

    <h3>Authorization Process:</h3>
    <p>The plugin uses secure OAuth2 authorization flow:</p>
    <ul>
        <li>Automatically opens browser to <a href="https://www.jdctools.com.cn/plugin-auth">official authorization page</a></li>
        <li>Secure login to your JDC Tools account in the web page</li>
        <li>Automatic return to plugin after authorization confirmation, no manual operation required</li>
        <li>Supports automatic re-authentication, auto-refresh when login status expires</li>
    </ul>

    <h3>Advanced Features:</h3>
    <ul>
        <li><strong>File Selector</strong> - Beautiful file selection interface with select all/none support</li>
        <li><strong>Smart Retry Mechanism</strong> - Automatic retry on network errors, auto re-login on authentication failure</li>
        <li><strong>Detailed Statistics</strong> - Display file size, type, processing time and other detailed information</li>
        <li><strong>Syntax Highlighting</strong> - Code suggestions with syntax highlighting support</li>
        <li><strong>Local Caching</strong> - Smart caching of authentication information to reduce repeated logins</li>
        <li><strong>Intelligent Filtering</strong> - Automatically filters .bin, .lock and other non-code files, supports 100+ programming languages</li>
    </ul>

    <h3>Open Source Information:</h3>
    <ul>
        <li><strong>License</strong>: Apache License 2.0</li>
        <li><strong>Source Code</strong>: <a href="https://github.com/u53/JDC_PRE_COMMIT_CODE_REVIEW">GitHub Repository</a></li>
        <li><strong>Issue Reporting</strong>: <a href="https://github.com/u53/JDC_PRE_COMMIT_CODE_REVIEW/issues">GitHub Issues</a></li>
    </ul>

    <p><strong>Official Website:</strong> <a href="https://www.jdctools.com.cn">https://www.jdctools.com.cn</a></p>
    <p><strong>User Guide:</strong> <a href="https://www.jdctools.com.cn/docs/intellij-plugin">Detailed Usage Tutorial</a></p>
    <p><strong>Technical Support:</strong> Visit our website for customer service if you have any questions</p>
    ]]></description>

    <!-- Product and plugin compatibility requirements -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>
    <depends>Git4Idea</depends>

    <!-- Extension points defined by the plugin -->
    <extensions defaultExtensionNs="com.intellij">
        <!-- Tool Window -->
        <toolWindow id="JDC Pre-Commit Review"
                   secondary="true"
                   anchor="bottom"
                   factoryClass="com.jdc.tools.precommit.ui.PreCommitReviewToolWindowFactory"/>

        <!-- Application Service -->
        <applicationService serviceImplementation="com.jdc.tools.precommit.service.GitAnalysisService"/>
        <applicationService serviceImplementation="com.jdc.tools.precommit.service.AuthService"/>
        <applicationService serviceImplementation="com.jdc.tools.precommit.service.OAuthService"/>
        <applicationService serviceImplementation="com.jdc.tools.precommit.service.ApiClient"/>
        <applicationService serviceImplementation="com.jdc.tools.precommit.service.PreCommitReviewService"/>

        <!-- Project Service -->
        <projectService serviceImplementation="com.jdc.tools.precommit.service.ProjectGitService"/>

        <!-- Notification Group -->
        <notificationGroup id="JDC Pre-Commit Review"
                          displayType="BALLOON"
                          key="notification.group.precommit"/>
    </extensions>

    <actions>
        <!-- Git Pre-Commit Review Actions -->
        <group id="JDCPreCommitReview" text="JDC Pre-Commit Review" description="JDC Git提交前代码审查">
            <add-to-group group-id="VcsGroups" anchor="last"/>
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>

            <action id="JDCPreCommitReview.ReviewStagedFiles"
                   class="com.jdc.tools.precommit.action.ReviewStagedFilesAction"
                   text="🔍 审查暂存文件"
                   description="选择并审查Git暂存区中的文件，支持自定义选择要审查的文件">
                <keyboard-shortcut keymap="$default" first-keystroke="ctrl shift R"/>
            </action>

            <action id="JDCPreCommitReview.ReviewCurrentFile"
                   class="com.jdc.tools.precommit.action.ReviewCurrentFileAction"
                   text="📄 审查当前文件"
                   description="审查当前编辑器中打开的文件变动">
                <keyboard-shortcut keymap="$default" first-keystroke="ctrl shift F"/>
            </action>

            <action id="JDCPreCommitReview.OpenToolWindow"
                   class="com.jdc.tools.precommit.action.OpenToolWindowAction"
                   text="🚀 打开审查窗口"
                   description="打开JDC Git提交前代码审查工具窗口">
                <keyboard-shortcut keymap="$default" first-keystroke="ctrl shift P"/>
            </action>
        </group>

        <!-- Main Menu -->
        <group id="JDCPreCommitReviewMainMenu" text="JDC Pre-Commit Review" description="JDC Git提交前代码审查">
            <add-to-group group-id="ToolsMenu" anchor="last"/>
            <reference ref="JDCPreCommitReview.ReviewStagedFiles"/>
            <reference ref="JDCPreCommitReview.ReviewCurrentFile"/>
            <reference ref="JDCPreCommitReview.OpenToolWindow"/>
            <separator/>
            <action id="JDCPreCommitReview.Settings"
                   class="com.jdc.tools.precommit.action.SettingsAction"
                   text="⚙️ 插件设置"
                   description="配置JDC Pre-Commit Review插件设置和偏好"/>
        </group>
    </actions>
</idea-plugin>
